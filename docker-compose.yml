version: '3.8'

services:
  app:
    build: .
    env_file:
      - .env # Load .env file for the app service
    ports:
      - "3333:3333"
    environment:
      # Construct DATABASE_URL from variables in .env
      # These variables are now loaded via env_file, but we still need to construct DATABASE_URL
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      # Add any other environment variables your app needs
    depends_on:
      - db
    volumes:
      - .:/usr/src/app # Mounts your current directory to the container for development
      - /usr/src/app/node_modules # Excludes node_modules from being overwritten by the host mount

  db:
    image: postgres:15 # Or your preferred PostgreSQL version
    restart: always
    env_file:
      - .env # Load .env file for the db service
    # Environment variables like POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB
    # will be taken directly from the .env file due to env_file directive.
    # We can remove the explicit environment block here if .env contains them directly.
    # For clarity, if .env defines POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB,
    # Docker Compose will use them.
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432" # Exposes PostgreSQL to the host, remove if not needed

volumes:
  postgres_data: 